<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />
	
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="cache" value="true" />
	</bean>
	
	<!-- New default, previous project had changed to below -->
	<bean class="org.springframework.web.portlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<context:component-scan base-package="com.mpi.astro"/>

	<!-- DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter are default -->
	<!-- REMOVING FOR ASTROCYTE
	<bean class="org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	-->
		<!-- Global property editors registration. You can do that locally with @InitBinder. -->
		<!--<property name="webBindingInitializer">
			<bean
				class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="propertyEditorRegistrars">
					<list>
						<ref bean="propertyEditorRegistrar" />
					</list>
				</property>
				<property name="conversionService">
					<ref bean="conversionService" />
				</property>
			</bean>
		</property>
	</bean> -->
	
	<!-- REMOVING FOR ASTROCYTE
    <bean id="propertyEditorRegistrar"
          class="com.toyota.portal.mvc.editors.CustomPropertyEditorRegistrar" />
    <bean id="conversionService"
          class="com.toyota.portal.mvc.formatters.CustomFormattingConversionServiceFactoryBean" />
    -->
     
    <!-- BELOW WAS COMMENTED OUT IN SAMPLE -->
	<!-- uncomment if you want to add custom spring HandlerInterceptors -->
	<!-- 
	<bean class="org.springframework.web.portlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="yourCustomInterceptor" />
			</list>
		</property>
	</bean>
	-->
		
</beans>