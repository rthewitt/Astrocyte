<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-2.5.xsd" >
    
    <context:component-scan base-package="com.mpi.astro"/>
    <context:annotation-config/>
    <mvc:annotation-driven />
    <tx:annotation-driven/>
    
    <bean id="serverProps" class="com.mpi.astro.util.PropertiesUtil">
		<property name="locations">
		    <list>
		        <value>classpath:db.properties</value>
		        <value>classpath:myelin.properties</value>
		    </list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
	</bean>
    

    <!-- Can probably be safely removed from test -->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/resources/templates/velocity/" />
    </bean>
    
    <!-- Was unable to add a secondary straightforward url resolver, but it should definitely work.  Research -->

	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/resources/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="order" value="1"/>
		<property name="suffix" value=".vm" />
	</bean>
	
	<bean id="alphaGame" class="com.mpi.astro.model.arcade.impl.JavaGame">
	    <property name="appName" value="com.alpha.game.Alpha Game" />
	    <property name="artifact" value="alpha-game-1.0-SNAPSHOT.jar" />
	    <property name="author" value="Fierfek" />
	    <property name="javaVersion" value="1.6" />
	     <property name="mainClass" value="com.alpha.game.Alpha" />
	     <property name="thumbNail" value="http://www.freevectorgraphics.org/d/file/201103/81b147bb0534b59dded39b95f5bbd267.png" />
	     <property name="title" value="Alpha" />
	     <property name="vendor" value="Myelin Price Interactive" />
	</bean>

   <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
   
   <!--  EDU -->
   
   <bean id="studentDao" class="com.mpi.astro.dao.StudentDao" />
   <bean id="courseDao" class="com.mpi.astro.dao.CourseDao" />
   <bean id="tutorialDao" class="com.mpi.astro.dao.TutorialDao" />
   <bean id="enrollmentDao" class="com.mpi.astro.dao.StudentCourseDao" />
   <bean id="eduService" class="com.mpi.astro.service.edu.EduService" />
   
   <!-- DataSource -->
		
	
	<bean id="testDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:test-db" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="workingPU"/>
		<property name="dataSource" ref="testDataSource"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect" />
			</bean>
		</property>		
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	    <property name="entityManagerFactory" ref="entityManagerFactory"/>
	    <property name="dataSource" ref="testDataSource" />
	</bean>
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	
	<!-- JMS, although probably not going to test and shouldn't require a connection.  Restrict bean scan somehow? -->
	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
    	<property name="connectionFactory">
      	<bean class="org.apache.activemq.ActiveMQConnectionFactory">
        	<property name="brokerURL">
          		<value>tcp://localhost:61616</value>
        	</property>
      	</bean>
    	</property>
  	</bean>	
  	
    <bean id="myQueue" class="org.apache.activemq.command.ActiveMQQueue">
  		<constructor-arg value="test"/>
	</bean>
	
    <bean id="incomingQ" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="incoming" />
    </bean>
    
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref local="jmsFactory" />
        </property>
        <property name="defaultDestination" ref="myQueue"/>
	</bean>
	
    <!-- Transitioning into jms namespace.  Will connection-factory want AMQC or Pooled/Cached?  Choosing the latter -->
    <jms:listener-container connection-factory="jmsFactory"
        destination-resolver="tempDestinationResolver" 
        concurrency="1"> <!-- tweak concurrency if necessary, can be a range.  No need for it now, affects ordering.  Not recommended for topics -->
    <jms:listener destination="incomingQ" ref="messageConsumer" method="handleCommand"/> <!-- multiples allowed -->
	</jms:listener-container>
	 
	 
    <!-- May wish to change this to JndiDestinationResolver.  Dev/Staging/client servers -->
	<bean id="tempDestinationResolver" class="org.springframework.jms.support.destination.BeanFactoryDestinationResolver" />
	
    
    <bean id="messageProducer" class="com.mpi.astro.service.jms.JmsMessageProducer">
        <property name="template" ref="jmsTemplate" />
    </bean>

    <bean id="messageConsumer" class="com.mpi.astro.service.jms.JmsMessageConsumer" />

</beans>
